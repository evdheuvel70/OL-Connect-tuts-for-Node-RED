[
    {
        "id": "7fa855a9.74a30c",
        "type": "tab",
        "label": "Startup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bdb9bf50.e7173",
        "type": "tab",
        "label": "Web pages",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6d8b614b.797fc",
        "type": "OL Connect Server",
        "z": "",
        "host": "192.168.2.101",
        "port": "9340",
        "name": ""
    },
    {
        "id": "138750f7.835137",
        "type": "inject",
        "z": "7fa855a9.74a30c",
        "name": "",
        "props": [
            {
                "p": "filename",
                "v": "/data/projects/OL-Connect-tuts-for-Node-RED/solution/manifest.json",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "91a20da5.975888"
            ]
        ]
    },
    {
        "id": "91a20da5.975888",
        "type": "file in",
        "z": "7fa855a9.74a30c",
        "name": "Read manifest",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "feaeb048.0f57f"
            ]
        ]
    },
    {
        "id": "feaeb048.0f57f",
        "type": "json",
        "z": "7fa855a9.74a30c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "913ac452.14c63"
            ]
        ]
    },
    {
        "id": "43636305.59ebac",
        "type": "debug",
        "z": "7fa855a9.74a30c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload & ' [' & managedFileId & ']'",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 160,
        "wires": []
    },
    {
        "id": "6e82eece.e253d",
        "type": "change",
        "z": "7fa855a9.74a30c",
        "name": "Lift resource names",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.resources",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "ad981a95.efec78"
            ]
        ]
    },
    {
        "id": "ad981a95.efec78",
        "type": "split",
        "z": "7fa855a9.74a30c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "990326a6.ac99e"
            ]
        ]
    },
    {
        "id": "990326a6.ac99e",
        "type": "change",
        "z": "7fa855a9.74a30c",
        "name": "Construct path",
        "rules": [
            {
                "t": "set",
                "p": "resourcesFolder",
                "pt": "msg",
                "to": "/data/projects/OL-Connect-tuts-for-Node-RED/solution/resources/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "resourcesFolder & payload",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 160,
        "wires": [
            [
                "2ec55e83.8643f2"
            ]
        ]
    },
    {
        "id": "289eff59.572a",
        "type": "http in",
        "z": "bdb9bf50.e7173",
        "name": "",
        "url": "/hello",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "6d5b115e.4b6fa",
        "type": "http response",
        "z": "bdb9bf50.e7173",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 120,
        "wires": []
    },
    {
        "id": "912aa065.12cfe",
        "type": "tab",
        "label": "Utils",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3de50bd9.3572a4",
        "type": "subflow",
        "name": "Spotify: refresh token",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "1cd24155.73c72f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 220,
                "wires": [
                    {
                        "id": "3f20070a.f1bed",
                        "port": 1
                    },
                    {
                        "id": "d05015c8.d2934",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "spotify_obj_path",
                "type": "str",
                "value": "flow.spotify",
                "ui": {
                    "label": {
                        "en-US": "Where is the spotify object located? (local path)"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "9646c685.9f4cc",
        "type": "mqtt-broker",
        "z": "",
        "name": "local",
        "broker": "neela.local",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "913ac452.14c63",
        "type": "debug",
        "z": "7fa855a9.74a30c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 60,
        "wires": []
    },
    {
        "id": "1cd24155.73c72f",
        "type": "function",
        "z": "3de50bd9.3572a4",
        "name": "Needs refresh?",
        "func": "let tokens;\nconst path = env.get('spotify_obj_path');\n\nif (path.startsWith('flow.')) {\n    msg._spotify_store_type = 'flow';\n    const pos = 'flow.'.length;\n    tokens = flow.get('$parent.' + path.slice(pos)).tokens;\n}\nelse if (path.startsWith('global.')) {\n    msg._spotify_store_type = 'global';\n    const pos = 'global.'.length;\n    tokens = global.get(path.slice(pos)).tokens;\n}\nelse {\n    node.error(\"Spotify token storage type unknown. Please prefix with `flow.` or `global.`.\", msg);\n    return null\n}\n\nnow = Date.now();\nif (now - 60000 >= tokens.expires_at) {\n    // Token will expire within in a minute or is already gone. \n    // Refresh now to prevent the following flow part to fail.\n    msg.payload = true;\n    msg._tokens = tokens;\n}\nelse {\n    msg.payload = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "3f20070a.f1bed"
            ]
        ]
    },
    {
        "id": "3f20070a.f1bed",
        "type": "switch",
        "z": "3de50bd9.3572a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "d113569f.677b7"
            ],
            []
        ],
        "outputLabels": [
            "refresh",
            "skip"
        ]
    },
    {
        "id": "d113569f.677b7",
        "type": "change",
        "z": "3de50bd9.3572a4",
        "name": "Prepare request",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.grant_type",
                "pt": "msg",
                "to": "refresh_token",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.refresh_token",
                "pt": "msg",
                "to": "_tokens.refresh_token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "(\t   $spotifyObj := $$._spotify_store_type = 'flow' ? $flowContext(\t       '$parent.' & $substringAfter(\t           $env('spotify_obj_path'),\t           'flow.'\t       )\t   ) : $$._spotify_store_type = 'global' ? $globalContext(\t       $substringAfter(\t           $env('spotify_obj_path'),\t           'global.'\t       )\t   ) : null;\t   {\t       \"content-type\": \"application/x-www-form-urlencoded\",\t       \"authorization\": \"Basic \" & $base64encode(\t           $spotifyObj.client_id & \":\" & $spotifyObj.client_secret\t       )\t    \t   }\t\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 40,
        "wires": [
            [
                "df74278c.9825e8"
            ]
        ]
    },
    {
        "id": "df74278c.9825e8",
        "type": "http request",
        "z": "3de50bd9.3572a4",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://accounts.spotify.com/api/token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "a0a69ccb.48766"
            ]
        ]
    },
    {
        "id": "a0a69ccb.48766",
        "type": "function",
        "z": "3de50bd9.3572a4",
        "name": "Prep for saving",
        "func": "msg.payload.expires_at = msg.payload.expires_in * 1000 + Date.now()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 120,
        "wires": [
            [
                "d05015c8.d2934"
            ]
        ]
    },
    {
        "id": "d05015c8.d2934",
        "type": "function",
        "z": "3de50bd9.3572a4",
        "name": "Save tokens",
        "func": "if (msg._spotify_store_type === 'flow') {\n    let base = flow.get('$parent.' + env.get('spotify_obj_path').slice('flow.'.length));\n    base.tokens.access_token = msg.payload.access_token;\n    base.tokens.expires_at = msg.payload.expires_at;\n    flow.set('$parent.' + env.get('spotify_obj_path').slice('flow.'.length), base);\n}\nelse if (msg._spotify_store_type === 'global') {\n    let base = global.get(env.get('spotify_obj_path').slice('global.'.length));\n    base.tokens.access_token = msg.payload.access_token;\n    base.tokens.expires_at = msg.payload.expires_at;\n    flow.set(env.get('spotify_obj_path').slice('global.'.length), base);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "64fc5b55.9207d4",
        "type": "inject",
        "z": "912aa065.12cfe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "4da86569.071924"
            ]
        ]
    },
    {
        "id": "d3c92a14.2d8d9",
        "type": "http request",
        "z": "912aa065.12cfe",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:1880/foo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 180,
        "wires": [
            [
                "265e67e9.e12968"
            ]
        ]
    },
    {
        "id": "19722f08.73a311",
        "type": "http in",
        "z": "912aa065.12cfe",
        "name": "",
        "url": "foo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 420,
        "wires": [
            [
                "b872164c.c8ab5",
                "993bb3a0.043b5"
            ]
        ]
    },
    {
        "id": "4da86569.071924",
        "type": "change",
        "z": "912aa065.12cfe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"foo\":\"bar\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "d3c92a14.2d8d9"
            ]
        ]
    },
    {
        "id": "b872164c.c8ab5",
        "type": "debug",
        "z": "912aa065.12cfe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 460,
        "wires": []
    },
    {
        "id": "265e67e9.e12968",
        "type": "debug",
        "z": "912aa065.12cfe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "993bb3a0.043b5",
        "type": "http response",
        "z": "912aa065.12cfe",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 390,
        "y": 420,
        "wires": []
    },
    {
        "id": "65715133.3b9e08",
        "type": "inject",
        "z": "912aa065.12cfe",
        "name": "Login to WordPress",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "425d1161.b66818"
            ]
        ]
    },
    {
        "id": "fb39156a.e7063",
        "type": "http request",
        "z": "912aa065.12cfe",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://wordpress/wp-json/jwt-auth/v1/token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 280,
        "wires": [
            [
                "fc392f34.a68c6"
            ]
        ]
    },
    {
        "id": "fc392f34.a68c6",
        "type": "debug",
        "z": "912aa065.12cfe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 280,
        "wires": []
    },
    {
        "id": "425d1161.b66818",
        "type": "change",
        "z": "912aa065.12cfe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"username\":\"parkerp\",\"password\":\"objlune\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "fb39156a.e7063",
                "1d0188e6.ad7867"
            ]
        ]
    },
    {
        "id": "1d0188e6.ad7867",
        "type": "debug",
        "z": "912aa065.12cfe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 360,
        "wires": []
    }
]